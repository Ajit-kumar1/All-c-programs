#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
struct node
{
	int data;
	struct node *next;
};
struct node *head;

void insertbeg();
void insertend();
void insertafter();
void deletebeg();
void deleteend();
void deleteafter();
void traverse();
void searchelement();
int main()
{
	int num=1;
	while(num!=9)
	{
	printf("\n\n1.Insert at Beginning : \n2.Insert at End\n3.Insert after Element\n4.Delete from beginnig\n5.Delete from End\n6.Delete after Element\n7.Traverse\n8.Search element\n");
	scanf("%d",&num);
	switch(num)
	{
		case 1: insertbeg();
				break;
		case 2: insertend();
				break;
//		case 3: insertafter();
//				break;
//		case 4: deletebeg();
//				break;
//		case 5: deleteend();
//				break;
//		case 6: deleteafter();
//				break;
//		case 7: traverse();
//				break;
//		case 8: searchelement();
//				break;
		default:
			printf("\nEnter a valid option...\n");
	}
	}
	return 0;	
}
void insertbeg()
{
	struct node *ptr;
	int item;
	ptr = (struct node *)malloc(sizeof(struct node *));
	if(ptr==NULL)
	{
		printf("\nOverflow occured");
	}
	else
	{
		printf("\nEnter Value...\n");
		scanf("%d",&item);
		ptr->data=item;
		ptr->next=head;
		head=ptr;
		printf("\nNode Inserted Succefully...");
	}
}
void insertend()
{
	struct node *ptr,*temp;
	int item;
	ptr = (struct node*)malloc(sizeof(int));
	if(ptr==NULL)
	{
		printf("List overflow...");
	}
	else 
	{
	printf("Enter Value...");
	scanf("%d",&item);
	if(head==NULL)
	{
	ptr->data=item;
	head = ptr;
	printf("Node inserted...");
	}
	else
	{
	temp=head;
	while(temp->next!=NULL)
	{
		temp=temp->next;
	}
	temp->next=ptr;
	ptr->next=NULL;
	printf("Node Inserted...");
	}
	}
}
void insertafter()
{
	struct node *ptr,*temp;
	int item;
	ptr=(struct node*)malloc(sizeof(int));
	printf("Enter a value...\n")
	scanf("%d",&item);
	ptr->data=item;
	if(head==NULL)
	{
		printf("Overflow\n");
	}
	else
	{
		
	}
}
void insertafter()
{
	struct node *ptr, *temp;
	int item, search;
	ptr=(struct node*)malloc(sizeof(int));
	printf("Enter a value\n");
	scanf("%d",&item);
	printf("Enter the value of search\n");
	scanf("%d",&search);
	if(ptr==NULL)
	{
		printf("Overflow...\n");
	}
	else
	{
		temp=head;
		while(temp->data=search)
		{
			temp=temp->next;
		}
		
	}
}
